rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User document rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Notification rules
    match /notifications/{notificationId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Posts and their comments
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null || request.resource.data.userId.matches('^bot_.*');
      allow update: if request.auth != null && (
        // Allow post owner to update everything
        resource.data.userId == request.auth.uid ||
        // Allow bot avatar updates
        (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['avatar', 'userAvatarId', 'isBot']) &&
         resource.data.userId.matches('^bot_.*')) ||
        // Allow other standard updates
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['options', 'likes', 'likedBy', 'commentsCount', 'repostedBy'])
      );
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Nested comments rules
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.userId;
      }
    }
    
    // Bot rules
    match /bots/{botId} {
      allow read: if true;
      allow write: if 
        request.auth != null || 
        (request.resource.data.keys().hasOnly(['lastPostTime']) && 
         botId.matches('^serenebot[0-9]+$')); // Only allow for valid bot IDs
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
} 